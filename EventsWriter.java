import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

/**
 * This class, EventWriter, exits for the purpose to write an agenda like text file for people to read but we will not
 * use the text file generated by this class in our program.
 */
class EventsWriter {
  private static final String LOG_NAME = "TransitOutputLog.txt";

  /**
   * Reset the text file.
   */
  static void resetLog() {
    try {
      PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(LOG_NAME)));
    } catch (IOException ex) {
      System.out.println("Error in finding the file!");
    }
  }

  /**
   * Write the activity into the text file.
   *
   * @param activity
   */
  static void writeLog(String activity) {
    try (PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(LOG_NAME, true)))) {
      out.println(activity + System.lineSeparator());
    } catch (IOException ex) {
      System.out.println("Error in the configuration files!");
    }
  }

  /**
   * Write the tap in massage into the text file.
   *
   * @param card
   */
  static void tapInLog(Card card) {
    EventsWriter.writeLog(
        card.getId()
            + " tapped in at "
            + card.currentTrip.entrance.getName()
            + " at time: "
            + String.format("%tT", card.currentTrip.startTime));
  }

  /**
   * Write the tap out, complete trip massage into the text file.
   *
   * @param card
   */
  static void completeTripLog(Card card) {
    EventsWriter.writeLog(
        card.getId()
            + " completed the trip starting from "
            + card.currentTrip.entrance.getName()
            + " at time "
            + card.currentTrip.startTime
            + " to "
            + card.currentTrip.exit.getName()
            + " at time "
            + card.currentTrip.exitTime
            + ". They paid: "
            + card.currentTrip.fare);
  }

  /**
   * Write the tap into different line massage into the text file.
   *
   * @param card
   */
  static void tappedAtDifferentLineOrSystem(Card card) {
    EventsWriter.writeLog(
        card.getId()
            + " tapped in at: "
            + card.currentTrip.entrance.name
            + " on transit system: "
            + card.currentTrip.transitSystem.name
            + " on transit line: "
            + card.currentTrip.entrance.transitLine.getTransitLineName()
            + " but tapped out at: "
            + card.currentTrip.exit.name
            + " on transit system: "
            + card.currentTrip.exit.transitLine.transitSystem.name
            + " on transit line: "
            + card.currentTrip.exit.transitLine.getTransitLineName()
            + " They were charged: "
            + card.currentTrip.fare);
  }

  /**
   * Write the forgot to tap in message.
   *
   * @param card
   */
  static void forgotToTapIn(Card card) {
    EventsWriter.writeLog(
        card.getId()
            + " forgot to tap in but tapped out at "
            + card.currentTrip.exit.getName()
            + " at time "
            + card.currentTrip.exitTime
            + " and was charged "
            + card.currentTrip.fare);
  }

  /**
   * Write the forgot to tap out message.
   *
   * @param card
   */
  static void forgotToTapOut(Card card) {
    EventsWriter.writeLog(
        card.getId()
            + " forgot to tap out but tapped in again at "
            + card.currentTrip.entrance.getName()
            + " at time "
            + card.currentTrip.startTime
            + " and was charged for the previous trip: "
            + card.currentTrip.fare);
  }

  /**
   * Write in the add money message.
   *
   * @param card
   * @param amount
   */
  static void addMoney(Card card, double amount) {
    EventsWriter.writeLog(
        card.getCardHolder().getEmail() + " added " + amount + " to their card: " + card.getId());
  }
}
